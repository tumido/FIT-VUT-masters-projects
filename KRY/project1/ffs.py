"""Feige-Fiat-Shamir identification scheme.

Module for Feige-Fiat-Shamir using predefined values of N and S vector
"""
from sys import maxint
import random

N = 110052076327767296332278909003557596689489608343540490719043128911527563044986614448061621078385858338447819387302300095774363490042394665871651210226062326085305456079126345235754571500700721235979959915972681162441782293955304347034230149947127634598257039207302038511273141434952804231307451885557828632088474683597994088281445277288338985837474224594629604122883837417100615484521221288889639851480272129928516950367903971215311940988293870531590370960989387842425114575336121473032714267438221069397654872446864432414920264420076828646603566139370235917604829807121262822489636224597581034363028883781713686453933L
S_0 = 14389115035070543630426657243642336249700432900941887724891424951413249845439747124020559333667592669567899542188626748157705612314729280123215320962029856999775586935502508941474739776836677184050458600973600610354515260608983020909083168574457649783756965091893744441349325614927337406702972278218663546466L
S_1 = 4702541946088648022328709353309513915359280132030975205315390811823499614597478968602836026480191474025717117032786394071285741292922088251162628454566775765693855574429594477664626287506461116062032955651868212245825529294067554627789828616155211204598441152869798714726878712166616396446770972204082501022L
S_2 = 90439730692167147560385425007468797253852225651820703169057019589795567385931821993250262233749269611779350712452866939432773969926596019333370432500625341626243672305626362503891284361094453581017081784331173544457851924540978641405043855018607274165422466680351837915876331729990989820988933165417663481830L
S_3 = 67614224790973582455958270250246803830120841194866045968751409499524741296510609655021820671015486143018285125006627442130491593624652395274368862555579837662886607780476613969777172070599928467465505261626823645895759576064978253505511981752654911347907458457475741721278053278041780441541451498920424439758L
S_4 = 136284310952516858185354734091351730864308669041707242161794733013834417690140964978366790378231580392580812683760162722114593177089040234131873399982882544784650089220061953066070684494134878817541111029944148782673454815085573550270750273439648310075414895698353532270235796494350410076313954167378522998675L

S_VECTOR = [S_0, S_1, S_2, S_3, S_4]
V_VECTOR = [S_0**2, S_1**2, S_2**2, S_3**2, S_4**2]


class FFSProver:
    def __init__(self):
        """Prover chooses random int R and a SIGN + or -."""
        self.sign = random.choice((-1, 1))
        self.r = random.randint(-maxint - 1, maxint)

    def get_x(self):
        """Compute X from values set on object init."""
        return (self.sign * self.r**2) % N

    def solve(self, a_vector):
        """Compute Y based on given A vector, own R and S numbers."""
        y = self.r
        for s, a in zip(S_VECTOR, a_vector):
            y *= s**a

        return y % N


class FFSVerifier:
    def __init__(self):
        """Verifier creates a vector of random 0 and 1."""
        self.a_vector = list()
        for i in range(len(S_VECTOR)):
            self.a_vector.append(random.choice((0, 1)))

    def get_A(self):
        """Return A vector."""
        return self.a_vector

    def save_X(self, x):
        """Store X for later use."""
        self.x = x

    def verify(self, y):
        """Verify the FFS quiz!"""
        if self.x == 0:
            return False

        result = self.x
        for v, a in zip(V_VECTOR, self.a_vector):
            result *= v**a

        return y**2 % N == abs(result % N)
